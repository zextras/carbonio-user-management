<?xml version="1.0" encoding="UTF-8"?><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:zimbra" xmlns:repl="urn:zimbraRepl" xmlns:tns="urn:zimbraRepl" elementFormDefault="qualified" targetNamespace="urn:zimbraRepl" version="1.0">

  <!--
    SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>

    SPDX-License-Identifier: AGPL-3.0-only
  -->

  <xs:import namespace="urn:zimbra" schemaLocation="zimbra.xsd"/>
    
  <xs:element name="BecomeMasterRequest" type="tns:becomeMasterRequest"/>
    
  <xs:element name="BecomeMasterResponse" type="tns:becomeMasterResponse"/>
    
  <xs:element name="BringDownServiceIPRequest" type="tns:bringDownServiceIPRequest"/>
    
  <xs:element name="BringDownServiceIPResponse" type="tns:bringDownServiceIPResponse"/>
    
  <xs:element name="BringUpServiceIPRequest" type="tns:bringUpServiceIPRequest"/>
    
  <xs:element name="BringUpServiceIPResponse" type="tns:bringUpServiceIPResponse"/>
    
  <xs:element name="ReplicationStatusRequest" type="tns:replicationStatusRequest"/>
    
  <xs:element name="ReplicationStatusResponse" type="tns:replicationStatusResponse"/>
    
  <xs:element name="StartCatchupRequest" type="tns:startCatchupRequest"/>
    
  <xs:element name="StartCatchupResponse" type="tns:startCatchupResponse"/>
    
  <xs:element name="StartFailoverClientRequest" type="tns:startFailoverClientRequest"/>
    
  <xs:element name="StartFailoverClientResponse" type="tns:startFailoverClientResponse"/>
    
  <xs:element name="StartFailoverDaemonRequest" type="tns:startFailoverDaemonRequest"/>
    
  <xs:element name="StartFailoverDaemonResponse" type="tns:startFailoverDaemonResponse"/>
    
  <xs:element name="StopFailoverClientRequest" type="tns:stopFailoverClientRequest"/>
    
  <xs:element name="StopFailoverClientResponse" type="tns:stopFailoverClientResponse"/>
    
  <xs:element name="StopFailoverDaemonRequest" type="tns:stopFailoverDaemonRequest"/>
    
  <xs:element name="StopFailoverDaemonResponse" type="tns:stopFailoverDaemonResponse"/>
    
  <xs:complexType name="becomeMasterRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="becomeMasterResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="bringDownServiceIPRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="bringDownServiceIPResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="bringUpServiceIPRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="bringUpServiceIPResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="replicationStatusRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="replicationStatusResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="masterStatus" type="tns:replicationMasterStatus"/>
            
      <xs:element minOccurs="0" name="slaveStatus" type="tns:replicationSlaveStatus"/>
          
    </xs:sequence>
        
    <xs:attribute name="replicationEnabled" type="xs:boolean" use="required"/>
        
    <xs:attribute name="currentRole" type="xs:string"/>
        
    <xs:attribute name="originalRole" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="replicationMasterStatus">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="catchupStatus" type="tns:replicationMasterCatchupStatus"/>
          
    </xs:sequence>
        
    <xs:attribute name="masterOperatingMode" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="replicationMasterCatchupStatus">
        
    <xs:sequence/>
        
    <xs:attribute name="remainingFiles" type="xs:int" use="required"/>
        
    <xs:attribute name="remainingBytes" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="replicationSlaveStatus">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="catchupStatus" type="tns:replicationSlaveCatchupStatus"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="replicationSlaveCatchupStatus">
        
    <xs:sequence/>
        
    <xs:attribute name="remainingOps" type="xs:int" use="required"/>
        
    <xs:attribute name="remainingFiles" type="xs:int" use="required"/>
        
    <xs:attribute name="remainingBytes" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="startCatchupRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="startCatchupResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="startFailoverClientRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="startFailoverClientResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="startFailoverDaemonRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="startFailoverDaemonResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="stopFailoverClientRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="stopFailoverClientResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="stopFailoverDaemonRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="stopFailoverDaemonResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
  
</xs:schema>
