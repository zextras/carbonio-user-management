<!--
SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>

SPDX-License-Identifier: AGPL-3.0-only
-->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <licenses>
    <license>
      <comments>Copyright (C) 2022 Zextras, https://www.zextras.com</comments>
      <name>AGPL-3.0-only</name>
    </license>
  </licenses>

  <artifactId>carbonio-user-management-core</artifactId>
  <name>carbonio-user-management-core</name>

  <parent>
    <groupId>com.zextras.carbonio.user-management</groupId>
    <artifactId>carbonio-user-management</artifactId>
    <version>0.2.5-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>com.zextras.carbonio.user-management</groupId>
      <artifactId>carbonio-user-management-generated</artifactId>
      <version>${project.parent.version}</version>
    </dependency>

    <dependency>
      <groupId>com.zextras.carbonio.soap-client</groupId>
      <artifactId>carbonio-soap-client</artifactId>
      <version>0.2.4-SNAPSHOT</version>
    </dependency>

    <!-- Guice dependencies -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-guice</artifactId>
    </dependency>

    <!-- JavaEE API -->
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- RestEasy dependencies -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>jaxrs-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-validator-provider</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
    </dependency>

    <!-- Jackson dependencies -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>

    <!-- Cache -->
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <!--
    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-netty-no-dependencies</artifactId>
      <scope>test</scope>
    </dependency>
    -->

    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-client-java-no-dependencies</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Helper to test JSON responses -->
    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!--
        Necessary to allow multiple source directories for tests. In this project there are
        two different test sources: one for the integration and one for the unit tests
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/test/java-it</source>
                <source>src/test/java-ut</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe.version}</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <configuration>
              <skipTests>${skip.integration.tests}</skipTests>
            </configuration>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surfire.version}</version>
        <configuration>
          <skipTests>${skip.unit.tests}</skipTests>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${maven-jacoco.version}</version>
        <executions>
          <!-- Integration tests -->
          <execution>
            <id>pre-integration-test</id>
            <configuration>
              <skip>${skip.integration.tests}</skip>
              <destFile>${project.build.directory}/jacoco-it-report/jacoco.exec</destFile>
            </configuration>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>

          <execution>
            <id>post-integration-test</id>
            <configuration>
              <skip>${skip.integration.tests}</skip>
              <dataFile>${project.build.directory}/jacoco-it-report/jacoco.exec</dataFile>
              <outputDirectory>${project.build.directory}/jacoco-it-report</outputDirectory>
            </configuration>
            <goals>
              <goal>report-integration</goal>
            </goals>
          </execution>

          <!-- Unit tests -->
          <execution>
            <id>pre-unit-test</id>
            <configuration>
              <skip>${skip.unit.tests}</skip>
              <destFile>${project.build.directory}/jacoco-ut-report/jacoco.exec</destFile>
            </configuration>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <configuration>
              <skip>${skip.unit.tests}</skip>
              <dataFile>${project.build.directory}/jacoco-ut-report/jacoco.exec</dataFile>
              <outputDirectory>${project.build.directory}/jacoco-ut-report</outputDirectory>
            </configuration>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>

          <!-- Merge and generate a full report -->
          <execution>
            <id>merge-reports</id>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <skip>${skip.jacoco.full.report.generation}</skip>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}/jacoco-ut-report</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
                <fileSet>
                  <directory>${project.build.directory}/jacoco-it-report</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${project.build.directory}/jacoco-full-report/merged.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>full-report</id>
            <configuration>
              <skip>${skip.jacoco.full.report.generation}</skip>
              <dataFile>${project.build.directory}/jacoco-full-report/merged.exec</dataFile>
              <outputDirectory>${project.build.directory}/jacoco-full-report</outputDirectory>
            </configuration>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>run-unit-tests</id>
      <properties>
        <skip.unit.tests>false</skip.unit.tests>
        <skip.integration.tests>true</skip.integration.tests>
      </properties>
    </profile>
    <profile>
      <id>run-integration-tests</id>
      <properties>
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>true</skip.unit.tests>
      </properties>
    </profile>
    <profile>
      <id>run-all-tests</id>
      <properties>
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>false</skip.unit.tests>
        <skip.jacoco.full.report.generation>false</skip.jacoco.full.report.generation>
      </properties>
    </profile>
    <profile>
      <id>generate-jacoco-full-report</id>
      <properties>
        <skip.jacoco.full.report.generation>false</skip.jacoco.full.report.generation>
        <skip.unit.tests>true</skip.unit.tests>
        <skip.integration.tests>true</skip.integration.tests>
      </properties>
    </profile>
  </profiles>
</project>
